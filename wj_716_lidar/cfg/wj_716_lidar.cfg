#! /usr/bin/env python

PACKAGE='wj_716_lidar'
from dynamic_reconfigure.parameter_generator_catkin import *
#from math import pi

#from driver_base.msg import SensorLevels

gen = ParameterGenerator()
#       Name              Type      Reconfiguration level             Description                                      Default    Min       Max
gen.add("min_ang",        double_t, 0, "The angle of the first range measurement [rad].",                               -3.14,    -3.14,    3.14)
gen.add("max_ang",        double_t, 0, "The angle of the last range measurement [rad].",                                3.14,     -3.14,    3.14)
gen.add("angle_increment",double_t, 0, "The angle_increment of the first range measurement [rad].",                     0.00582,  0.00582,  0.00582)
gen.add("time_increment", double_t, 0, "The time_increment[s].",                                                        0.00006167129,   0.00006167129,   0.00006167129)
gen.add("range_min",      int_t,    0, "The range_min [m].",                                                            0,        0,        30)
gen.add("range_max",      int_t,    0, "The range_max[m].",                                                             30,       0,        30)
gen.add("resize",         int_t,    0, "The resize[num].",                                                              811,      0,        811)
gen.add("frame_id",       str_t,    0, "The TF frame in which laser scans will be returned.",                        "laser")
#gen.add("intensity",      bool_t,   SensorLevels.RECONFIGURE_RUNNING, "Whether or not the TiM3xx returns intensity values.",                        True)
# gen.add("cluster",        int_t,    SensorLevels.RECONFIGURE_RUNNING, "The number of adjacent range measurements to cluster into a single reading.", 1,         0,   99)
#gen.add("skip",           int_t,    SensorLevels.RECONFIGURE_RUNNING, "The number of scans to skip between each measured scan.",                    0,         0,    9)
# gen.add("port",           str_t,    SensorLevels.RECONFIGURE_CLOSE,   "The serial port where the TiM3xx device can be found.",                       "/dev/ttyACM0")
# gen.add("calibrate_time", bool_t,   SensorLevels.RECONFIGURE_CLOSE,   "Whether the node should calibrate the TiM3xx's time offset.",                 True)

#gen.add("time_offset",    double_t, SensorLevels.RECONFIGURE_RUNNING, "An offset to add to the time stamp before publication of a scan [s].",       -0.001,     -0.25, 0.25)

exit(gen.generate(PACKAGE, "wj_716_lidar", "wj_716_lidar"))



